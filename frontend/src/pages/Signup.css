/*
==================================================
File: Signup.css
Created On: 08-June-2025
Created By: Gautam Kumar
Description:
  Styling for the authentication pages (Signup/Login) of TechReel.

Sections:
  - body: Sets global layout and gradient background
  - .signup-container: Form container with glassmorphism and animation
  - input fields: Styled for smooth interaction with hover/focus states
  - button: Styled with hover effects and transitions
  - .message: Optional message text styling
  - .animated-input: Shared class for input animation and transitions
  - @keyframes fadeIn: Animation used for form fade-in

Purpose:
  Provides a clean, modern, and interactive UI for the authentication
  pages using a glass effect, consistent theme colors, and subtle animations.
==================================================
*/
/* import React, { useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import { toast } from "react-toastify";
import "./Signup.css";

const Signup = () => {
  const [formData, setFormData] = useState({
    user_id: "",
    password: "",
    qualification: "",
    skills: "",
  });
  const navigate = useNavigate();

  const handleChange = (e) => {
    setFormData((prev) => ({
      ...prev,
      [e.target.name]: e.target.value,
    }));
  };

  const validateInputs = () => {
    const { user_id, password, qualification, skills } = formData;
    if (!user_id || !password || !qualification || !skills) {
      toast.error("All fields are required");
      return false;
    }
    if (password.length < 6) {
      toast.error("Password must be at least 6 characters");
      return false;
    }
    return true;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!validateInputs()) return;

    try {
      const res = await fetch("http://localhost:5000/api/auth/signup", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData),
      });

      const data = await res.json();

      if (res.ok) {
        toast.success("Signup successful! Redirecting...");
        localStorage.setItem("user", JSON.stringify(data.user));
        setTimeout(() => navigate("/profile"), 1500);
      } else {
        toast.error(data.message || "Signup failed");
      }
    } catch (err) {
      toast.error("Server error during signup");
    }
  };

  return (
    <div className="signup-container">
      <h2>Sign Up</h2>
      <form onSubmit={handleSubmit}>
        <input
          name="user_id"
          type="text"
          placeholder="User ID (e.g., rahul_07)"
          value={formData.user_id}
          onChange={handleChange}
        />
        <input
          name="password"
          type="password"
          placeholder="Password"
          value={formData.password}
          onChange={handleChange}
        />
        <input
          name="qualification"
          type="text"
          placeholder="Qualification (e.g., B.Tech)"
          value={formData.qualification}
          onChange={handleChange}
        />
        <input
          name="skills"
          type="text"
          placeholder="Skills (e.g., React, Node, MongoDB)"
          value={formData.skills}
          onChange={handleChange}
        />
        <button type="submit">Sign Up</button>
      </form>

      <p style={{ marginTop: "1rem" }}>
        Already have an account? <Link to="/login">Login here</Link>
      </p>
    </div>
  );
};

export default Signup; */

.signup-container {
  max-width: 400px;
  margin: auto;
  padding: 2rem;
  border-radius: 8px;
  background: #f0f0f0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.signup-container h2 {
  text-align: center;
  margin-bottom: 20px;
}

.signup-container input {
  display: block;
  width: 100%;
  padding: 10px;
  margin-bottom: 12px;
  border-radius: 4px;
  border: 1px solid #ccc;
}

.signup-container button {
  width: 100%;
  padding: 10px;
  background: #4caf50;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
